/* Generated By:JavaCC: Do not edit this line. CTLParserConstants.java */
package antelope.ctl.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CTLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NOT = 8;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int OR = 10;
  /** RegularExpression Id. */
  int IFF = 11;
  /** RegularExpression Id. */
  int IMPLIES = 12;
  /** RegularExpression Id. */
  int AX = 13;
  /** RegularExpression Id. */
  int AY = 14;
  /** RegularExpression Id. */
  int AF = 15;
  /** RegularExpression Id. */
  int AG = 16;
  /** RegularExpression Id. */
  int AOPEN = 17;
  /** RegularExpression Id. */
  int EX = 18;
  /** RegularExpression Id. */
  int EY = 19;
  /** RegularExpression Id. */
  int EF = 20;
  /** RegularExpression Id. */
  int EG = 21;
  /** RegularExpression Id. */
  int EOPEN = 22;
  /** RegularExpression Id. */
  int U = 23;
  /** RegularExpression Id. */
  int BIND = 24;
  /** RegularExpression Id. */
  int EXISTS = 25;
  /** RegularExpression Id. */
  int AT = 26;
  /** RegularExpression Id. */
  int AT_VAR = 27;
  /** RegularExpression Id. */
  int AT_NOM = 28;
  /** RegularExpression Id. */
  int DOT = 29;
  /** RegularExpression Id. */
  int LPAR = 30;
  /** RegularExpression Id. */
  int RPAR = 31;
  /** RegularExpression Id. */
  int LBRACKET = 32;
  /** RegularExpression Id. */
  int COMMA = 33;
  /** RegularExpression Id. */
  int TRUE = 34;
  /** RegularExpression Id. */
  int FALSE = 35;
  /** RegularExpression Id. */
  int IDENTIFIER = 36;
  /** RegularExpression Id. */
  int NOMINAL = 37;
  /** RegularExpression Id. */
  int DECIMAL = 38;
  /** RegularExpression Id. */
  int HEX = 39;
  /** RegularExpression Id. */
  int BIN = 40;
  /** RegularExpression Id. */
  int LETTER = 41;
  /** RegularExpression Id. */
  int DIGIT = 42;
  /** RegularExpression Id. */
  int HEX_DIGIT = 43;
  /** RegularExpression Id. */
  int BIN_DIGIT = 44;
  /** RegularExpression Id. */
  int BLANKS = 45;
  /** RegularExpression Id. */
  int ILLEGAL_CHAR = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"~\"",
    "\"&\"",
    "\"|\"",
    "\"=\"",
    "\"->\"",
    "\"AX\"",
    "\"AY\"",
    "\"AF\"",
    "\"AG\"",
    "<AOPEN>",
    "\"EX\"",
    "\"EY\"",
    "\"EF\"",
    "\"EG\"",
    "<EOPEN>",
    "\"U\"",
    "\"!\"",
    "\"]\"",
    "\"@\"",
    "<AT_VAR>",
    "<AT_NOM>",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\",\"",
    "\"true\"",
    "\"false\"",
    "<IDENTIFIER>",
    "<NOMINAL>",
    "<DECIMAL>",
    "<HEX>",
    "<BIN>",
    "<LETTER>",
    "<DIGIT>",
    "<HEX_DIGIT>",
    "<BIN_DIGIT>",
    "<BLANKS>",
    "<ILLEGAL_CHAR>",
  };

}
